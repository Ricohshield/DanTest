// <auto-generated />
using System;
using DanTest.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DanTest.Migrations
{
    [DbContext(typeof(DanTestContext))]
    [Migration("20181104172750_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024");

            modelBuilder.Entity("DanTest.Models.Repo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AuthorImg");

                    b.Property<string>("AuthorName");

                    b.Property<string>("Description");

                    b.Property<int>("ForkCount");

                    b.Property<long>("GitHubId");

                    b.Property<string>("Language");

                    b.Property<DateTime>("LastUpdate");

                    b.Property<long>("SearchRequestId");

                    b.Property<int>("StarCount");

                    b.Property<string>("Title");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.HasIndex("SearchRequestId");

                    b.ToTable("Repositories");
                });

            modelBuilder.Entity("DanTest.Models.RepoSearchRequest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ForkFrom");

                    b.Property<int?>("ForkTo");

                    b.Property<bool>("IsArchived");

                    b.Property<int>("Language");

                    b.Property<int?>("SizeFrom");

                    b.Property<int?>("SizeTo");

                    b.Property<int?>("StarsFrom");

                    b.Property<int?>("StarsTo");

                    b.Property<string>("Term");

                    b.HasKey("Id");

                    b.ToTable("SearchRequests");
                });

            modelBuilder.Entity("DanTest.Models.Repo", b =>
                {
                    b.HasOne("DanTest.Models.RepoSearchRequest", "SearchRequest")
                        .WithMany("Repositories")
                        .HasForeignKey("SearchRequestId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
